version: "3.7"
services:
    nginx:
        build:
            context: docker/development/nginx
        ports:
            - "8081:80"
        volumes:
            - ./:/app
        depends_on:
            - php-fpm

    node-cli:
        build:
            context: docker/development/node
        volumes:
            - ./:/app

    php-fpm:
        build:
            context: docker/development/php-fpm
        env_file: .env
        environment:
            PHP_IDE_CONFIG: serverName=API
        volumes:
            - ./:/app

    php-cli:
        build:
            context: docker/development/php-cli
        env_file: .env
        volumes:
            - ./:/app

    api-postgres:
        image: postgres:12.2-alpine
        env_file: .env
        environment:
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_DATABASE}
        volumes:
            - api-postgres:/var/lib/postgresql/data
        ports:
            - "54321:5432"

    elasticsearch:
        image: elasticsearch:8.6.1
        container_name: 'elasticsearch'
        restart: always
        volumes:
            - elastic_data:/usr/share/elasticsearch/data
        environment:
            - cluster.name=docker-cluster
            - bootstrap.memory_lock=true
            - discovery.type=single-node
            - xpack.security.enabled=false
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        ports:
            - 9200:9200
            - 9300:9300
        networks:
            - elk

    kibana:
        image: kibana:8.6.1
        container_name: 'kibana'
        restart: always
        environment:
            - ELASTICSEARCH_URL="http://elasticsearch:9200"
            - xpack.security.enabled=false
        depends_on:
            - elasticsearch
        ports:
            - 5601:5601
        networks:
            - elk

volumes:
    api-postgres:
    elastic_data: {}

networks:
    elk:
